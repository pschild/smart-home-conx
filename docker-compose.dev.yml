version: "3.8"
services:
  messenger-connector:
    image: messenger-connector
    build:
      context: .
      dockerfile: apps/messenger-connector/Dockerfile
    container_name: messenger-connector
    ports:
      - 9022:9022
    restart: always

  device-manager:
    image: device-manager
    build:
      context: .
      dockerfile: apps/device-manager/Dockerfile
    container_name: device-manager
    depends_on:
      - mongodb
    ports:
      - 9092:9092
    restart: always

  sensor-connector:
    image: sensor-connector
    build:
      context: .
      dockerfile: apps/sensor-connector/Dockerfile
    container_name: sensor-connector
    ports:
      - 9053:9053
    restart: always

  logger:
    image: logger
    build:
      context: .
      dockerfile: apps/logger/Dockerfile
    container_name: logger
    ports:
      - 9032:9032
    restart: always

  mqtt-broker:
    image: mqtt-broker
    build:
      context: .
      dockerfile: apps/mqtt-broker/Dockerfile
    container_name: mqtt-broker
    ports:
      - 1883:1883
      - 1884:1884
    restart: always

  api-gateway:
    image: api-gateway
    build:
      context: .
      dockerfile: apps/api-gateway/Dockerfile
    container_name: api-gateway
    ports:
      - 3333:3333
    # volumes:
    #   - ./ssl:/app/ssl
    restart: always

  # esp-pir-manager:
  #   image: esp-pir-manager
  #   build:
  #     context: .
  #     dockerfile: apps/esp-pir-manager/Dockerfile
  #   container_name: esp-pir-manager
  #   depends_on:
  #     - mqtt-broker
  #     - api-gateway
  #   ports:
  #     - 9052:9052
  #   restart: always

  # esp-update-server:
  #   image: esp-update-server
  #   build:
  #     context: .
  #     dockerfile: apps/esp-update-server/Dockerfile
  #   container_name: esp-update-server
  #   depends_on:
  #     - mqtt-broker
  #     - api-gateway
  #   volumes:
  #     - esp-binaries:/esp-binaries
  #   ports:
  #     - 9042:9042
  #   restart: always

  ota-server:
    image: ota-server
    build:
      context: .
      dockerfile: apps/ota-server/Dockerfile
    container_name: ota-server
    depends_on:
      - mqtt-broker
      - api-gateway
    volumes:
      - esp-binaries:/esp-binaries
    ports:
      - 9042:9042
    restart: always

  # adesso-commuter-server:
  #   image: adesso-commuter-server
  #   build:
  #     context: .
  #     dockerfile: apps/adesso-commuter-server/Dockerfile
  #   container_name: adesso-commuter-server
  #   depends_on:
  #     - mqtt-broker
  #     - api-gateway
  #   volumes:
  #     - /mnt/adesso-commuter-server/screenshots:/app/assets/screenshots
  #   ports:
  #     - 9062:9062
  #   restart: always

  commuting-watcher:
    image: commuting-watcher
    build:
      context: .
      dockerfile: apps/commuting-watcher/Dockerfile
    container_name: commuting-watcher
    init: true # https://stackoverflow.com/a/46057262/5276055
    depends_on:
      - mqtt-broker
      - api-gateway
    volumes:
      - /mnt/commuting-watcher/screenshots:/app/assets/screenshots
    ports:
      - 9062:9062
    restart: always

  alexa-connector:
    image: alexa-connector
    build:
      context: .
      dockerfile: apps/alexa-connector/Dockerfile
    container_name: alexa-connector
    depends_on:
      - registry
      - mqtt-broker
      - api-gateway
    volumes:
      - amazon-env:/app/assets/alexa-remote-control/env
    ports:
      - 9072:9072
    restart: always

  mqtt-client:
    image: mqtt-client
    build:
      context: .
      dockerfile: apps/mqtt-client/Dockerfile
    container_name: mqtt-client
    depends_on:
      - registry
      - mqtt-broker
      - api-gateway
    ports:
      - 9080:80
      - 9082:443
    # volumes:
    #   - ./ssl:/app/ssl
    restart: always

  mongodb:
    image: mongodb
    build:
      context: .
      dockerfile: mongodb/Dockerfile
    container_name: mongodb
    restart: always
    ports:
      - 27017:27017
    volumes:
      - db:/data/db
      - configdb:/data/configdb

  influxdb:
    image: arm32v7/influxdb:1.8.4
    container_name: influxdb
    restart: always
    ports:
      - 8086:8086
    volumes:
      - influxdb-storage:/var/lib/influx.db

  portainer:
    image: portainer/portainer
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9000:9000
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  registry:
    image: registry:2
    container_name: registry
    ports:
      - 5000:5000
    volumes:
      - /mnt/registry:/var/lib/registry
    restart: always

volumes:
  esp-binaries:
    name: esp-binaries
  amazon-env:
    name: amazon-env
  portainer_data:
  db:
  configdb:
  influxdb-storage: