{
  "name": "smart-home-conx",
  "version": "0.0.0",
  "license": "MIT",
  "scripts": {
    "ng": "nx",
    "postinstall": "node ./decorate-angular-cli.js && ngcc --properties es2015 browser module main",
    "nx": "nx",
    "start": "run-p start:mqtt-client start:mqtt-broker",
    "docker:build:all:dev": "docker-compose -f docker-compose.dev.yml build",
    "docker:build:all:prod": "docker-compose build --build-arg PRODUCTION=true",
    "docker:start:all:dev": "npm run docker:build:all:dev && docker-compose -f docker-compose.dev.yml up -d",
    "docker:start:all:prod": "npm run docker:build:all:prod && docker-compose up -d",
    "docker:publish:all:prod": "./docker-build.sh --prod --publish --all -r 192.168.178.28:5000",
    "########### messenger-connector ###########": "############################################################################################################",
    "start:messenger-connector": "nx serve messenger-connector",
    "build:messenger-connector": "nx build messenger-connector",
    "test:messenger-connector": "nx test messenger-connector",
    "docker:messenger-connector": "docker build -t messenger-connector -f apps/messenger-connector/Dockerfile .",
    "ncc:messenger-connector": "ncc build dist/apps/messenger-connector/main.js -m -C -o dist/apps/messenger-connector/vendor",
    "########### mqtt-client ###########": "############################################################################################################",
    "start:mqtt-client": "nx serve mqtt-client",
    "build:mqtt-client": "nx build mqtt-client",
    "test:mqtt-client": "nx test mqtt-client",
    "docker:mqtt-client": "docker build -t mqtt-client -f apps/mqtt-client/Dockerfile .",
    "########### mqtt-broker ###########": "############################################################################################################",
    "start:mqtt-broker": "nx serve mqtt-broker",
    "build:mqtt-broker": "nx build mqtt-broker",
    "test:mqtt-broker": "nx test mqtt-broker",
    "docker:mqtt-broker": "docker build -t mqtt-broker -f apps/mqtt-broker/Dockerfile .",
    "ncc:mqtt-broker": "ncc build dist/apps/mqtt-broker/main.js -m -C -o dist/apps/mqtt-broker/vendor",
    "########### logger ###########": "############################################################################################################",
    "start:logger": "nx serve logger",
    "build:logger": "nx build logger",
    "test:logger": "nx test logger",
    "docker:logger": "docker build -t logger -f apps/logger/Dockerfile .",
    "ncc:logger": "ncc build dist/apps/logger/main.js -m -C -o dist/apps/logger/vendor",
    "########### sensor-connector ###########": "############################################################################################################",
    "start:sensor-connector": "nx serve sensor-connector",
    "build:sensor-connector": "nx build sensor-connector",
    "test:sensor-connector": "nx test sensor-connector",
    "docker:sensor-connector": "docker build -t sensor-connector -f apps/sensor-connector/Dockerfile .",
    "ncc:sensor-connector": "ncc build dist/apps/sensor-connector/main.js -m -C -o dist/apps/sensor-connector/vendor",
    "########### device-manager ###########": "############################################################################################################",
    "start:device-manager": "nx serve device-manager",
    "build:device-manager": "nx build device-manager",
    "test:device-manager": "nx test device-manager",
    "docker:device-manager": "docker build -t device-manager -f apps/device-manager/Dockerfile .",
    "ncc:device-manager": "ncc build dist/apps/device-manager/main.js -m -C -o dist/apps/device-manager/vendor",
    "########### ota-server ###########": "############################################################################################################",
    "start:ota-server": "nx serve ota-server",
    "build:ota-server": "nx build ota-server",
    "test:ota-server": "nx test ota-server",
    "docker:ota-server": "docker build -t ota-server -f apps/ota-server/Dockerfile .",
    "ncc:ota-server": "ncc build dist/apps/ota-server/main.js -m -C -o dist/apps/ota-server/vendor",
    "########### alexa-connector ###########": "############################################################################################################",
    "start:alexa-connector": "npm run create-env:alexa-connector && nx serve alexa-connector",
    "build:alexa-connector": "npm run create-env:alexa-connector && nx build alexa-connector",
    "test:alexa-connector": "nx test alexa-connector",
    "create-env:alexa-connector": "node apps/alexa-connector/create-env.js",
    "docker:alexa-connector": "docker build -t alexa-connector -f apps/alexa-connector/Dockerfile .",
    "ncc:alexa-connector": "ncc build dist/apps/alexa-connector/main.js -m -C -o dist/apps/alexa-connector/vendor",
    "########### commuting-watcher ###########": "############################################################################################################",
    "start:commuting-watcher": "nx serve commuting-watcher",
    "build:commuting-watcher": "nx build commuting-watcher",
    "test:commuting-watcher": "nx test commuting-watcher",
    "docker:commuting-watcher": "docker build -t commuting-watcher -f apps/commuting-watcher/Dockerfile .",
    "ncc:commuting-watcher": "ncc build dist/apps/commuting-watcher/main.js -m -C -o dist/apps/commuting-watcher/vendor",
    "########### api-gateway ###########": "############################################################################################################",
    "start:api-gateway": "nx serve api-gateway",
    "build:api-gateway": "nx build api-gateway",
    "docker:api-gateway": "docker build -t api-gateway -f apps/api-gateway/Dockerfile .",
    "ncc:api-gateway": "ncc build dist/apps/api-gateway/main.js -m -C -o dist/apps/api-gateway/vendor",
    "lint": "nx workspace-lint && ng lint",
    "e2e": "ng e2e",
    "affected:apps": "nx affected:apps",
    "affected:libs": "nx affected:libs",
    "affected:build": "nx affected:build",
    "affected:e2e": "nx affected:e2e",
    "affected:test": "nx affected:test",
    "affected:lint": "nx affected:lint",
    "affected:dep-graph": "nx affected:dep-graph",
    "affected": "nx affected",
    "format": "nx format:write",
    "format:write": "nx format:write",
    "format:check": "nx format:check",
    "update": "nx migrate latest",
    "dep-graph": "nx dep-graph",
    "help": "nx help",
    "workspace-generator": "nx workspace-generator"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "12.0.0",
    "@angular/cdk": "12.0.5",
    "@angular/common": "12.0.0",
    "@angular/compiler": "12.0.0",
    "@angular/core": "12.0.0",
    "@angular/forms": "12.0.0",
    "@angular/material": "12.0.5",
    "@angular/platform-browser": "12.0.0",
    "@angular/platform-browser-dynamic": "12.0.0",
    "@angular/router": "12.0.0",
    "@nestjs/common": "^7.0.0",
    "@nestjs/core": "^7.0.0",
    "@nestjs/mapped-types": "^0.4.0",
    "@nestjs/microservices": "^7.6.14",
    "@nestjs/platform-express": "^7.0.0",
    "@nestjs/platform-socket.io": "^7.6.15",
    "@nestjs/serve-static": "^2.2.2",
    "@nestjs/typeorm": "^7.1.5",
    "@nestjs/websockets": "^7.6.15",
    "@ngrx/component-store": "12.0.0",
    "@ngxs/logger-plugin": "^3.7.2",
    "@ngxs/storage-plugin": "^3.7.2",
    "@ngxs/store": "^3.7.2",
    "@nrwl/angular": "12.4.0",
    "@types/node": "14.14.33",
    "aedes": "^0.43.0",
    "async-mqtt": "^2.6.1",
    "body-parser": "^1.19.0",
    "class-transformer": "^0.4.0",
    "class-validator": "^0.13.1",
    "cors": "^2.8.5",
    "date-fns": "^2.16.1",
    "detect-rpi": "^1.4.0",
    "dotenv": "8.2.0",
    "express": "4.17.1",
    "express-jwt": "^6.0.0",
    "fs-extra": "^9.0.1",
    "http-proxy-middleware": "^1.0.6",
    "influx": "^5.8.0",
    "jsonwebtoken": "^8.5.1",
    "mongodb": "^3.6.5",
    "ngx-mqtt": "^9.0.5",
    "node-telegram-bot-api": "^0.51.0",
    "octonode": "^0.10.0",
    "puppeteer": "^4.0.0",
    "reflect-metadata": "^0.1.13",
    "rxjs": "~6.5.5",
    "semver": "^7.3.2",
    "simple-git": "^2.23.0",
    "socket.io": "^3.0.1",
    "socket.io-client": "^3.0.1",
    "suncalc2": "^1.8.1",
    "tslib": "^2.0.0",
    "typeorm": "^0.2.31",
    "websocket-stream": "^5.5.2",
    "zip-lib": "^0.7.1",
    "zone.js": "~0.11.4"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "12.0.0",
    "@angular/cli": "12.0.0",
    "@angular/compiler-cli": "12.0.0",
    "@angular/language-service": "12.0.0",
    "@nestjs/schematics": "^7.0.0",
    "@nestjs/testing": "^7.0.0",
    "@ngxs/devtools-plugin": "^3.7.2",
    "@nrwl/cli": "12.4.0",
    "@nrwl/express": "12.4.0",
    "@nrwl/jest": "12.4.0",
    "@nrwl/nest": "12.4.0",
    "@nrwl/node": "12.4.0",
    "@nrwl/tao": "12.4.0",
    "@nrwl/workspace": "12.4.0",
    "@types/express": "4.17.0",
    "@types/jest": "26.0.8",
    "@types/socket.io": "^2.1.11",
    "@vercel/ncc": "^0.25.1",
    "codelyzer": "6.0.0",
    "eslint": "7.22.0",
    "jest": "27.0.3",
    "jest-preset-angular": "9.0.3",
    "prettier": "2.2.1",
    "ts-jest": "27.0.3",
    "ts-node": "9.1.1",
    "tslint": "6.1.3",
    "typescript": "4.2.4"
  }
}
